<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>

    <!-- 附带一个 toolbar 的 activity 的 theme -->
    <style name="ToolbarActivityTheme" parent="Theme.AppCompat.NoActionBar">
        <!-- toolbar 中 文字菜单 的颜色 -->
        <item name="actionMenuTextColor">@color/color_white</item>
        <!-- toolbar 中右边 三个点 的选项按钮的颜色 -->
        <item name="android:textColorSecondary">@color/color_white</item>
        <!-- 沉浸式状态栏 颜色设置 -->
        <item name="colorPrimaryDark">#cc84919b</item>
    </style>


    <!-- Toolbar 弹出的菜单样式 -->
    <style name="ToolbarPopupWindow" parent="ThemeOverlay.AppCompat.Light">
        <!-- toolbar 弹出菜单的 背景颜色 -->
        <item name="android:colorBackground">@color/color_white</item>
        <!-- toolbar 弹出菜单中 字体的 颜色 -->
        <item name="android:textColor">@color/color_1a1a1a</item>
        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item>
    </style>

    <style name="OverflowMenuStyle" parent="Widget.AppCompat.Light.PopupMenu.Overflow">
        <!--把该属性改为false即可使menu位置位于toolbar之下-->
        <item name="overlapAnchor">false</item>
    </style>


    <!-- 全屏的 activity 的 theme -->
    <style name="FullScreenTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>

    <!-- 通常用来作为 item 划分的 分割线 -->
    <style name="my_divide_line">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">0.2dp</item>
        <item name="android:background">@color/color_grey</item>
    </style>

    <!-- 通常用来做 比例适配 的功能性 View -->
    <style name="my_divide_view">
        <item name="android:layout_weight">1</item>
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">match_parent</item>
    </style>

    <!-- 通常用来做 提示性信息 的文字样式 -->
    <style name="fun_text_view">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">48.0dp</item>
        <item name="android:background">@color/color_84919b</item>
        <item name="android:gravity">center</item>
        <item name="android:textColor">@color/color_white</item>
        <item name="android:textSize">16.0sp</item>
    </style>

    <!-- 绘制屏幕解锁 中每个 ImageView 的样式  -->
    <style name="lock_image_style">
        <item name="android:layout_width">32.0dp</item>
        <item name="android:layout_height">32.0dp</item>
        <item name="android:scaleType">fitXY</item>
        <item name="android:src">@mipmap/lock_normal</item>
    </style>

</resources>
